# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true
  
  config.vm.define "ccs3" do |ccs3|

    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://atlas.hashicorp.com/search.
    ccs3.vm.box = "ubuntu/trusty64"

    # Disable automatic box update checking. If you disable this, then
    # boxes will only be checked for updates when the user runs
    # `vagrant box outdated`. This is not recommended.
    # ccs3.vm.box_check_update = false

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
    # ccs3.vm.network "forwarded_port", guest: 80, host: 8080

      ccs3.vm.hostname = "local-dev"
      ccs3.vm.network "private_network", ip: "192.168.88.21"
      ccs3.vm.network "private_network", type: "dhcp"
      ccs3.hostmanager.aliases = %w(ccs3.example.com)

    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    # ccs3.vm.network "public_network"

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    #  ccs3.vm.synced_folder "deploy", "/deploy"


    #ccs3.vm.provision :shell, path: "bootstrap.sh", run: "once"

    ccs3.vm.provider "virtualbox" do |pr|
       pr.cpus = "2"
       # Customize the amount of memory on the VM:
       pr.memory = "4096"
    end

    ccs3.vm.provision :ansible do |ansible|
      ansible.playbook = "env.yml"
      ansible.verbose = "v"
      ansible.extra_vars = { ServerName: "ccs3.example.com", S3FileStorageEnabled: true, use_art: false, build_name: "contentcontroller-snapshot", use_ssl: true, enable_automation_api: true }
    end

  end
  
  config.vm.define "cc" do |cc|

    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://atlas.hashicorp.com/search.
    cc.vm.box = "ubuntu/trusty64"

    # Disable automatic box update checking. If you disable this, then
    # boxes will only be checked for updates when the user runs
    # `vagrant box outdated`. This is not recommended.
    # cc.vm.box_check_update = false

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
    # cc.vm.network "forwarded_port", guest: 80, host: 8080

      cc.vm.hostname = "local-dev"
      cc.vm.network "private_network", ip: "192.168.88.22"
      cc.vm.network "private_network", type: "dhcp"
      cc.hostmanager.aliases = %w(cc.example.com)

    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    # cc.vm.network "public_network"

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    #  cc.vm.synced_folder "deploy", "/deploy"


    #cc.vm.provision :shell, path: "bootstrap.sh", run: "once"

    cc.vm.provider "virtualbox" do |pr|
       pr.cpus = "2"
       # Customize the amount of memory on the VM:
       pr.memory = "4096"
    end

    cc.vm.provision :ansible do |ansible|
      ansible.playbook = "env.yml"
      ansible.verbose = "v"
      ansible.extra_vars = { ServerName: "cc.example.com", S3FileStorageEnabled: false, use_ssl: true, enable_automation_api: true }
    end

  end

end
