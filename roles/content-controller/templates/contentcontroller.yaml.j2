# The URL at which this application is hosted. This value is used when building dispatch
# packages for export, so the URL *must* be fully-qualified and accessible from client
# LMSs. If this value ever changes, then all dispatch packages must be re-exported!

applicationHost: https://{{ ServerName }}

# The URL at which the service layer itself is hosted. Typically, this will be the same
# as applicationHost. This setting is used when importing content, but is not persisted
# anywhere - so it may be changed without causing any issues.
serviceHost: http://{{ serviceHost }}:{{ CC_API_PORT }}

# Jetty server configuration settings.
server:
  rootPath: /api/*
  applicationConnectors:
    - type: http
      port: {{ CC_API_PORT }}
  adminConnectors:
    - type: http
      port: {{ CC_ADMIN_PORT }}

# Database connection settings. At a minimum, you will need to set the
# username, password, and JDBC url.
# NOTE: Content Controller supports MySQL 5.6 and newer.
database:
  # The username and password for connecting to the database.
  user: {{ cc_db_username }}
  password: {{ cc_db_password }}
  # The JDBC URL (e.g, jdbc:mysql://localhost:3306/contentcontroller).
  url: {{ cc_db_url }}
  properties:
    useSsl: {{ db_use_ssl }}
    enabledSslProtocolSuites: {{ db_ssl_protocols }}
    {% if db_migration is defined and db_migration %}
    # Increase the timeouts if we're running the DB migration to ensure
    # that we leave time for schema changes to happen.
    socketTimeout: {{ 9999999 }}
    connectTimeout: {{ 9999999 }}
    {% endif %}

{% if cc_db_use_utf8 is defined and cc_db_use_utf8|bool %}
    charSet: UTF-8
    characterEncoding: UTF-8
    useUnicode: true
{% endif %}

  # If you prefer to use the MySQL Connector/J library, place the JAR file in
  # the lib folder, and change this setting to "com.mysql.jdbc.Driver".
  driverClass: org.mariadb.jdbc.Driver

  # The remaining settings can usually be left at their default values.
  # See http://www.dropwizard.io/0.9.1/docs/manual/configuration.html#database
  # for available settings.
  maxWaitForConnection: 5s
  initializationQuery: "{{ cc_db_connection_initialization_query }}"
  validationQuery: "/* ping */ -- Content Controller Health Check"
  validationQueryTimeout: 3s
  minSize: {{ cc_db_pool_min_size }}
  maxSize: {{ cc_db_pool_max_size }}
  initialSize: {{ cc_db_pool_initial_size }}   # Initial size must be greater than, or equal to `minSize`
  checkConnectionWhileIdle: true
  checkConnectionOnConnect: true
  logValidationErrors: true
  evictionInterval: 10s
  minIdleTime: 1 minute

# API authentication token settings.
authToken:
  # The secret key used to sign API auth tokens. Changing this value will
  # invalidate existing tokens, requiring users to re-authenticate.
  # KEEP THIS VALUE SECRET! AN ATTACKER WITH THIS SECRET KEY WILL BE ABLE TO
  # FORGE API AUTHENTICATION TOKENS!
  secretKey: {{ secret_key }}

  # The expiration time for auth tokens in minutes. The minimum value is 1
  # minute, the maximum value is 43200 minutes (30 days), and the default
  # is 1440 minutes (1 day).
  expiration: {{ token_exp }}

  # An identifier for the application that is added to authentication tokens.
  # The default is "ContentController", it can be any arbitrary string or
  # (ideally) a URL. Changing this value will invalidate existing tokens,
  # requiring users to re-authenticate.
  issuer: {{ issuer }}

  # The maximum number of times a user can attempt to log in before their
  # account is locked.
  maxLoginAttempts: {{ maxLoginAttempts }}

shareReportToken:
  # The secret key used to sign API auth tokens. Changing this value will
  # invalidate existing tokens, requiring users to re-authenticate.
  # KEEP THIS VALUE SECRET! AN ATTACKER WITH THIS SECRET KEY WILL BE ABLE TO
  # FORGE API AUTHENTICATION TOKENS!
  secretKey: {{ secret_key }}

  # The expiration time for auth tokens in minutes. The minimum value is 1
  # minute, the maximum value is 43200 minutes (30 days), and the default
  # is 1440 minutes (1 day).
  expiration: {{ token_exp }}

  # An identifier for the application that is added to authentication tokens.
  # The default is "ContentController", it can be any arbitrary string or
  # (ideally) a URL. Changing this value will invalidate existing tokens,
  # requiring users to re-authenticate.
  issuer: {{ issuer }}

{% if is_3p3_or_later %}
deepLinkingToken:
  # The secret key used to sign API auth tokens. Changing this value will
  # invalidate existing tokens, requiring users to re-authenticate.
  # KEEP THIS VALUE SECRET! AN ATTACKER WITH THIS SECRET KEY WILL BE ABLE TO
  # FORGE API AUTHENTICATION TOKENS!
  secretKey: {{ secret_key }}

  # The expiration time for auth tokens in minutes. The minimum value is 1
  # minute, the maximum value is 43200 minutes (30 days), and the default
  # is 1440 minutes (1 day).
  expiration: {{ token_exp }}

  # An identifier for the application that is added to authentication tokens.
  # The default is "ContentController", it can be any arbitrary string or
  # (ideally) a URL. Changing this value will invalidate existing tokens,
  # requiring users to re-authenticate.
  issuer: {{ issuer }}
{% endif %}

{% if enable_lead_in_page is defined and enable_lead_in_page|bool == True %}
leadInPageToken:
  # The secret key used to sign Lead In Page JWTs. Changing this value will
  # invalidate existing tokens.
  secretKey: {{ secret_key }}

  # The expiration time for Lead In Page JWTs in minutes. The minimum value is 1
  # minute, the maximum value is 43200 minutes (30 days), and the default
  # is 1440 minutes (1 day).
  expiration: {{ token_exp }}

  # An identifier for the application that is added to authentication tokens.
  # The default is "ContentController", it can be any arbitrary string or
  # (ideally) a URL.
  issuer: {{ issuer }}

leadInPageFeatureEnabled: {{ enable_lead_in_page }}
{% endif %}

# Dispatch-related configuration settings.
dispatch:
  # How long should dispatch download links be available before expiring, in minutes.
  # The minimum value is 1 minute, and the maximum value is 720000 minutes (500 days).
  defaultDownloadExpiration: {{ defaultDownloadExpiration }}

# Engine API connection settings.
engine:
  # The username and password for connecting to the Engine API, as set in Engine's configuration.
  clientUser: {{ engine_user }}
  clientPassword: {{ engine_password }}

  # The Engine API endpoint URL.
{% if engine_use_v2_api|bool == True %}
  url: http://localhost:8081/ScormEngineInterface/api/
{% else %}
  url: http://localhost:8081/ScormEngineInterface/api/v1/
{% endif %}

  # The Engine TinCan endpoint URL.
  tincanEndpoint: http://localhost:8081/ScormEngineInterface/TCAPI/

  # The username and password Engine should use to access the service layer's
  # /engine resources. These values must match the "ApiRollupRegistrationAuthUser"
  # and "ApiRollupRegistrationAuthPassword" properties in Engine's properties file.
  serviceUser: {{ engine_user }}
  servicePassword: {{ engine_password }}

# HTTP Client configuration settings. These are used for making dispatch launch requests to Engine.
jerseyClient:
  # The The maximum idle time for a connection, once established.
  timeout: {{ jerseyClientTimeout }}
  # The maximum time to wait for a connection to open.
  connectionTimeout: {{ jerseyClientConnectionTimeout }}

# File storage settings. Content controller can use the local filesystem or S3 to store files.
# If using S3, then set type to "s3", and fill in the additional settings below.
fileStorage:

{% if S3FileStorageEnabled %}
  type: s3  # Either "local" or "s3".
  # S3 file storage settings.
  s3:
    # The S3 bucket to store files in.
    bucket: {{ S3FileStorageBucket }}
    # Disable DNS buckets (optional - default `false`)
    disableDnsBuckets: {{ cc_s3_disable_dns_buckets }}
    # The path to a (local) directory for temporary files.
    tempDir: {{ S3FileStorageTempDir }}
    {% if not is_4p0_or_later %}
    # The AWS access key to use for connecting to S3.
    awsId: {{ S3FileStorageAwsId }}
    # The AWS secret key to use for connecting to S3.
    awsKey: {{ S3FileStorageAwsKey }}
    # The S3 endpoint to connect to (optional - default `s3.amazonaws.com`)
    endpoint: {{ S3Endpoint }}
    # The S3 endpoint HTTP port (optional - default `80`)
    httpPort: {{ cc_s3_http_port }}
    # The S3 endpoint HTTPS port (optional - default `443`)
    httpsPort: {{ cc_s3_https_port }}
    # Force HTTPS only (optional - default `true`)
    httpsOnly: {{ cc_s3_https_only }}
{% if video_transcode_threshold is defined %}
    # The AWS region set for the file storage
    awsRegion: {{ S3FileStorageRegion }}
    # The IAM role that is used when creating MediaConvert service jobs
    mediaConvertServiceRole: {{ S3MediaConvertServiceRole }}
{% endif %}
{% if video_transcode_threshold is defined %}
videoTranscodeThreshold: {{ video_transcode_threshold }}
{% endif %}
{% if video_transcode_tags is defined %}
videoTranscodeTags: {{ video_transcode_tags }}
{% endif %}
{% if video_transcode_queue is defined %}
videoTranscodeQueue: {{ video_transcode_queue }}
{% endif %}
{% endif %}

# Content upload and import settings.
import:
  # Path to which uploaded files should be saved (e.g. "/mnt/content/uploads"). This path is always
  # on the local filesystem, even if "fileStorage" is configured to use S3!
  filePathToUploads: {{ uploads_filepath }}
  # Path to which imported content should be saved (e.g. "/mnt/content/courses"). This path will
  # be on either the local filesystem or S3, depending on the "fileStorage" settings.
  filePathToContent: {{ courses_webpath }}
  # Web path under which imported content should be served (default is "/courses").
  webPathToContent: {{ courses_webpath }}

  # Path to which generated version export zip files are located. This path will
  # be on either the local filesystem or S3, depending on the "fileStorage" settings.
  filePathToGeneratedZips: {{ generated_course_zip_webpath }}
  daysToKeepExportedVersionZips: {{ daysToKeepExportedVersionZips }}




{% elif not S3FileStorageEnabled %}
  type: local

import:
  # Path to which uploaded files should be saved (e.g. "/mnt/content/uploads"). This path is always
  # on the local filesystem, even if "fileStorage" is configured to use S3!
  filePathToUploads: {{ uploads_filepath }}
  # Path to which imported content should be saved (e.g. "/mnt/content/courses"). This path will
  # be on either the local filesystem or S3, depending on the "fileStorage" settings.
  filePathToContent: {{ courses_filepath }}
  # Web path under which imported content should be served (default is "/courses").
  webPathToContent: {{ courses_webpath }}

  # Path to which generated version export zip files are located. This path will
  # be on either the local filesystem or S3, depending on the "fileStorage" settings.
  filePathToGeneratedZips: {{ generated_course_zip_location }}
  daysToKeepExportedVersionZips: {{ daysToKeepExportedVersionZips }}

{% endif %}

  # The number of background threads to use for import jobs.
  importThreads: {{ import_threads }}

  # During the import process, the application has to generate "signed URLs" for package
  # manifest files. These settings control how those URLs are generated.
  manifestUrlSigning:
    # The secret key used to sign manifest URLs. KEEP THIS VALUE SECRET! AN ATTACKER WITH
    # THIS SECRET KEY WILL BE ABLE TO FORGE SIGNED MANIFEST URLS!
    secretKey: {{ secret_key }}

    # The expiration time for manifest URLs in minutes. The minimum value is 1 minute, the
    # maximum value is 480 minutes (8 hours), and the default is 10 minutes.
    #expiration: 10

    # An identifier for the application that is included in the manifest URL signature.
    # The default is "ContentController", it can be any arbitrary string or (ideally) a URL.
    issuer: {{ issuer }}

{% if use_cloudfront is defined and use_cloudfront|bool == True %}
# CloudFront signed cookie settings.
cloudFront:
  # The domain name to use for policy statements.
  resourceDomain: {{ cloudfront_distro_domain }}
  # The absolute file path to the PRIVATE key file to use for signing.
  keyFilePath: {{ cc_deploy_path }}/bin/{{ cloudfront_private_key }}
{% if cloudfront_access_key_id != None %}
  # The ID for the CloudFront key pair that is being used for signing.
  keyPairId: {{ cloudfront_access_key_id }}
{% endif %}
  # How long the cookies should be valid in minutes. This should be greater than the maximum
  # amount of time you expect learners to have courses open from a single launch. The default
  # is 1440 minutes (1 day), and the maximum is 43200 minutes (30 days).
  expiration: 1440
{% endif %}

logging:
  level: INFO
  loggers:
    "com.rusticisoftware.contentcontroller.service.cli.webpath":
      level: DEBUG
      appenders:
        - type: console
          # Level Thread Date Logger Message (\n Exception)
          logFormat: "%-5p %-10t [%d{HH:mm:ss.SSS}] %c{0}: %m%n%rEx"
    "com.rusticisoftware.contentcontroller.service.audit.LoggingResourceAuditor":
      additive: {{ audit_log_failure|default(false) }}
      appenders:
        - type: file
          currentLogFilename: /var/log/contentcontroller-audit.log
          archivedLogFilenamePattern: /var/log/contentcontroller-audit-%d.log
          archivedFileCount: {{ audit_log_archive_days|default('32') }}
{% for logger_name, log_level in cc_custom_log_levels.items() %}
    "{{ logger_name }}":
      level: {{ log_level }}
{% endfor %}
  appenders:
    - type: file
      threshold: ALL
      currentLogFilename: /var/log/contentcontroller.log
      archivedLogFilenamePattern: /var/log/contentcontroller-%d.log.gz
      archivedFileCount: 3

{% if use_datadog %}

metrics:
  frequency: 1 minute                       # Default is 1 second.
  reporters:
    - type: datadog
      host: https://app.datadoghq.com/api/               # Optional with UDP Transport
      #tags:                              # Optional. Defaults to (empty)
      #includes: []                            # Optional. Defaults to (all).
      #excludes:                           # Optional. Defaults to (none).
      prefix: {{ ClientName }}              # Optional. Defaults to (none).
      #expansions:                           # Optional. Defaults to (all).
      #metricNameFormatter:                  # Optional. Default is "default".
      #dynamicTagsCallback:                  # Optional. Defaults to (none).
      transport:
        type: http
        apiKey: {{ datadog_api_key }}
        #connectTimeout: 5         # Optional. Default is 5 seconds
        #socketTimeout: 5           # Optional. Default is 5 seconds

{% endif %}


reporting:
  sanitizeLearnerInfo: {{ sanitizeLearnerInfo }}
  # Location on the file system that generated report files should be stored
{% if S3FileStorageEnabled %}
  generatedFileLocation: {{ generated_file_webpath }}
{% elif not S3FileStorageEnabled %}
  generatedFileLocation: {{ generated_file_location }}
{% endif %}


{% if enable_automation_api %}

publicApi:
  enabled: true
  accessToken:
    # The secret key used to sign API auth tokens. Changing this value will
    # invalidate existing tokens, requiring users to re-authenticate.
    # KEEP THIS VALUE SECRET! AN ATTACKER WITH THIS SECRET KEY WILL BE ABLE TO
    # FORGE API AUTHENTICATION TOKENS!
    secretKey: {{ secret_key }}

    # The expiration time for auth tokens in minutes. The minimum value is 1
    # minute, the maximum value is 43200 minutes (30 days), and the default
    # is 30 minutes. (Optional)
    expiration: {{ public_api_auth_expiration|default('30') }}

    # An identifier for the application that is added to authentication tokens.
    # The default is "ContentControllerApi", it can be any arbitrary string or
    # (ideally) a URL. Changing this value will invalidate existing tokens,
    # requiring users to re-authenticate. (Optional)
    issuer: ContentControllerApi

{% endif %}

{% if enable_contentvault is defined and enable_contentvault|bool == True %}
contentvault:
  enabled: {{ enable_contentvault|bool }}
  expirationSeconds: {{ contentvault_expiration_seconds }}
{% if contentvault_sliding_window_seconds is defined %}
  slidingWindowSeconds: {{ contentvault_sliding_window_seconds }}
{% endif %}
  windowCacheDuration: {{ contentvault_window_cache_duration }}
{% if contentvault_fields_to_validate is defined %}
  validationOptions: {{ contentvault_fields_to_validate }}
{% endif %}
{% endif %}

{% if  enable_emails %}
email:
  enabled: true                             # Allow Content Controller to send emails
  host: {{ cc_smtp_host }}                  # Defaults to localhost (optional)
  port: {{ cc_smtp_port }}                  # Defaults to 25 (optional)
  username: {{ cc_smtp_username }}          # (optional)
  password: {{ cc_smtp_password }}          # (optional)
  transport: {{ cc_smtp_transport }}        # One of ['SSL', 'TLS', 'PLAIN'] - Defaults to 'PLAIN' (optional)
  fromUserName: {{ cc_smtp_from_name }}     # Default from name for emails - Defaults to 'Content Controller' (optional)
  fromUserEmail: {{ cc_smtp_from_email }}   # Default from email address - Defaults to 'no-reply@contentcontroller.com' (optional)

  {% if password_reset_failure_threshold is defined %}
   # The maximum number of times a user can attempt to log in before their
   # account is locked.
  passwordResetThreshold: {{ password_reset_failure_threshold }}
  {% endif %}

  {% if password_reset_failure_window is defined %}
    # Number indicates the past number of days to check the password_reset_failure_threshold against requests made
  passwordResetWindow: {{ password_reset_failure_window }}
  {% endif %}
{% endif %}

{% if user_account_days_inactive_threshold is defined %}
userAccountDaysInactiveThreshold: {{ user_account_days_inactive_threshold }}
{% endif %}

{% if assign_latest_version_instead_of_restart is defined %}
assignLatestVersionInsteadOfRestart: {{ assign_latest_version_instead_of_restart }}
{% endif %}

{% if enable_signin_customization is defined %}
signInCustomizationEnabled: {{ enable_signin_customization }}
{% endif %}

{% if enable_saml is defined and enable_saml|bool == True %}
saml:
  enabled: {{ enable_saml }}
  keystorePassword: {{ keystore_password }}
  privateKeyPassword: {{ private_key_password }}
  maximumAuthLifetime: {{ maximum_auth_lifetime }}
{% if saml_identifying_attribute is defined %}
  identifyingAttribute: {{ saml_identifying_attribute }}
{% endif %}
{% if saml_access_attribute is defined and saml_access_value is defined %}
  accessAttribute: {{ saml_access_attribute }}
  accessValue: {{ saml_access_value }}
  accessCondition: {% if saml_access_condition is defined %}{{ saml_access_condition }}{% else %}contains{% endif %}
{% endif %}
{% endif %}

# These conditionals let us only define the requirements specified in the config file,
# and we default
{% if passwords_require_number is defined
  or passwords_require_special is defined
  or passwords_require_letter is defined
  or passwords_require_lowercase is defined
  or passwords_require_uppercase is defined
  or passwords_minimum_length is defined %}
passwords:
  requireNumber: {{ passwords_require_number if passwords_require_number is defined else true }}
  requireLetter: {{ passwords_require_letter if passwords_require_letter is defined else true }}
  requireSpecial: {{ passwords_require_special if passwords_require_special is defined else false }}
  requireLowercase: {{ passwords_require_lowercase if passwords_require_lowercase is defined else false }}
  requireUppercase: {{ passwords_require_uppercase if passwords_require_uppercase is defined else false }}
  {% if passwords_minimum_length is defined %}minimumLength: {{ passwords_minimum_length }} {% endif %}
{% endif %}

# Determines whether or not the launcher link is an account option
{% if use_launcher_link is defined %}
launcherLinkEnabled: {{ use_launcher_link }}
{% endif %}

{% if audit_log_failure is defined %}
auditLogFailureCheckEnabled: {{ audit_log_failure }}
{% endif %}

{% if is_3p3_or_later and deep_linking_secret is defined %}
lti13DeepLinkingSecret: {{ deep_linking_secret }}
{% endif %}

{% if enable_event_queue_service is defined and enable_event_queue_service|bool %}
eventQueueConfiguration:
    eventQueueName: {{ event_queue_name }}
    deadLetterQueueName: {{ dead_letter_queue_name }}
{% endif %}

{% if bypass_db_connection_health_check is defined %}
bypassDbConnectionHealthCheck: {{ bypass_db_connection_health_check }}
{% endif %}

{% if is_4p0_or_later %}
{% if enable_aws_connection is defined and enable_aws_connection|bool %}
awsConfiguration:
    # The AWS access key to use for connecting to S3.
    awsId: {{ S3FileStorageAwsId }}
    # The AWS secret key to use for connecting to S3.
    awsKey: {{ S3FileStorageAwsKey }}
    # The S3 endpoint to connect to (optional - default `s3.amazonaws.com`)
    endpoint: {{ S3Endpoint }}
    # The S3 endpoint HTTP port (optional - default `80`)
    httpPort: {{ cc_s3_http_port }}
    # The S3 endpoint HTTPS port (optional - default `443`)
    httpsPort: {{ cc_s3_https_port }}
    # Force HTTPS only (optional - default `true`)
    httpsOnly: {{ cc_s3_https_only }}
    # The AWS region set for the file storage
    awsRegion: {{ S3FileStorageRegion }}
{% endif %}
{% if video_transcode_threshold is defined %}
transcoderConfiguration:
    videoTranscodeThreshold: {{ video_transcode_threshold }}
    # The IAM role that is used when creating MediaConvert service jobs
    mediaConvertServiceRole: {{ media_convert_service_role }}
{% if video_transcode_tags is defined %}
    videoTranscodeTags: {{ video_transcode_tags }}
{% endif %}
{% if video_transcode_queue is defined %}
    videoTranscodeQueue: {{ video_transcode_queue }}
{% endif %}
{% endif %}
{% endif %}