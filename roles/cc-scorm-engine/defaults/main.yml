engine_db_name: ScormEngineDB
engine_db_username: scormengine
engine_db_url: "jdbc:mysql:{{ engine_db_failover_parameter }}//{{ cc_db_host }}/{{ engine_db_name }}"
enable_statement_conversion: "False"
enable_statement_conversion_historical: false

# engine syslog log level
# Should be one of the following, listed here in descending verbosity:
# trace, debug, info, warn, error
# trace and debug will blow up busy servers
# and info shouldn't be used on busy production boxes if it's avoidable
engine_log_level: "info"

# Enabling PlayerFramesetAlways will cause the default configuration for any new content/equivalents to be Frameset/Frameset
PlayerFramesetAlways: false

# Enabling PlayerDisableRightClick will restrict the right-click functionality in the content player window
PlayerDisableRightClick: false

# Enabling PerserveRunTimeData will change the default value for the "Reset RunTime Data Timing" course configuration setting
# to "Never", from the regular default of "When Exit is Not Suspend" for SCORM 2004 content. This means that run-time data
# will not be reset on subsequent launches after a non-suspend exit. This setting can be overridden on a per-course basis
# from the course's Test & Configure page.
PreserveRunTimeData: false

# By default, the engine upgrade migrations don't run.
# specify this at build time if they need to run.
engine_upgrade: false

engine_use_modern_player: "True"

# Specify a failover parameter.  Options are failover:, sequential:, replication:, aurora:
# https://mariadb.com/kb/en/library/failover-and-high-availability-with-mariadb-connector-j/
# It should include the end colon, please
engine_db_failover_parameter: ""

# Set the query used to validate a DB connection.  A good reason for changing this would be to check if a connection
# is read only.  Example:
#   SELECT content_controller_connection_validation();
engine_db_connnection_initialization_query: "/* ping */ -- Engine Health Check"

# Determines whether runtime data received from player should be stored in a lob column or normalized.
# Should significantly reduce DB utilization, but isn't great if you're running your own reporting queries
# against the Engine DB.
engine_store_runtime_data_as_lob: true

## Prior to 2018 Engine was referred to as ScormEngine, and then the name was later changed to RusticiEngine
war_name: "{{ 'Scorm' if scorm_engine_war_name == True else 'Rustici' }}"

# Used as the value of TinCanStatementForwardWebTimeout in the Engine config file
xapi_forwarding_timeout: 10000
# Used as the value of TinCanStatementForwardStmtBatchSize in the Engine config file
xapi_forwarding_batch_size: 500

engine_custom_log_levels: {}

always_close_top_on_exit: false

tin_can_account_system_page: false

engine_video_player: "{{ is_3p3_or_later | ternary('VideoJs', 'Native') }}"

deep_linking_content_selector_url: "https://{{ ServerName }}/deepLinking/"

# This object should never have a value. Any defaults set by the Content Controller team should be
# provided in the below engine_custom_settings_defaults dictionary.
engine_custom_settings: {}
engine_custom_settings_defaults:
  DispatchLaunchStateOverride: Learner_Preferred
  X_MitigateBrokenXapiAgentIds: true