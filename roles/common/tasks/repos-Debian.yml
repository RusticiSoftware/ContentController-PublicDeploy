---
- name: Use local apt cache if desired
  template: src=90-apt-proxy.conf.j2 dest=/etc/apt/apt.conf.d/90-apt-proxy.conf
  when: use_local_apt_cache

- name: Remove local apt cache if disabled
  file: dest=/etc/apt/apt.conf.d/90-apt-proxy.conf state=absent
  when: not use_local_apt_cache

# Expires 02/17/2019
- name: Copy apt release signing key for MySQL
  copy:
    src: "mysql-releases.key"
    dest: "/tmp/mysql-releases.key"
    mode: 0600
    force: true

- name: Add apt release signing key for MySQL
  apt_key:
    file: "/tmp/mysql-releases.key"
    state: present

- name: Cleanup MySQL 5.6 dependencies
  package: name="mysql-utilities" state=absent

# Configure mysql-apt-config for <Ubuntu20
- name: Fetch MySQL apt repo config tool (<Ubuntu20)
  get_url:
    url: "http://dev.mysql.com/get/mysql-apt-config_0.8.9-1_all.deb"
    dest: "/tmp/mysql-apt-config_all.deb"
    mode: 0750
  when: ansible_distribution_major_version < "20"

- name: Specify MySQL tool version to use (<Ubuntu20)
  shell: "echo mysql-apt-config mysql-apt-config/enable-repo select mysql-5.7 | sudo debconf-set-selections"
  when: ansible_distribution_major_version < "20" and mysql_version == "5.7"

# Configure mysql-apt-config for Ubuntu20
- name: Fetch MySQL apt repo config tool (Ubuntu20)
  get_url:
    url: "http://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb"
    dest: "/tmp/mysql-apt-config_all.deb"
    mode: 0750
  when: ansible_distribution_major_version >= "20" or mysql_version == "8.0"

- name: Specify MySQL tool platform to use (Ubuntu20)
  shell: echo mysql-apt-config mysql-apt-config/unsupported-platform select ubuntu bionic | sudo debconf-set-selections
  when: ansible_distribution_major_version >= "20"

- name: Specify MySQL tool repo to use (Ubuntu20)
  shell: echo mysql-apt-config mysql-apt-config/repo-codename select bionic | sudo debconf-set-selections
  when: ansible_distribution_major_version >= "20"

- name: Specify MySQL tool version to use (Ubuntu20)
  shell: "echo mysql-apt-config mysql-apt-config/select-server select mysql-{{ mysql_version }} | sudo debconf-set-selections"
  when: ansible_distribution_major_version >= "20"

- name: Install MySQL apt repo
  shell: DEBIAN_FRONTEND=noninteractive dpkg --install /tmp/mysql-apt-config_all.deb

- name: Update apt cache to pull in MySQL repo contents
  apt: update_cache=yes

- name: Run aptitude safe-upgrade
  apt: upgrade=safe
  when: not noupgrade

- name: Install pip
  package:
    name: python-pip
    state: latest
    update_cache: yes
  when: ansible_distribution_major_version < "20"
