<VirtualHost *:443>

    ServerName {{ ServerName }}
    ServerAdmin {{ ServerAdmin }}
    {% if ServerAliases is defined %}
    {% for alias in ServerAliases %}
    ServerAlias {{ alias }}
    {% endfor %}
    {% endif %}
    ServerSignature Off
    Options -Indexes

    SSLEngine on
    SSLProxyEngine On
    SSLCertificateFile /etc/ssl/certs/{{ ssl_certificate }}
    SSLCertificateKeyFile /etc/ssl/private/{{ ssl_key }}

    {% if not use_self_signed and ssl_chain != None %}
    SSLCertificateChainFile /etc/ssl/certs/{{ ssl_chain }}
    {% endif %}

    Header set X-XSS-Protection: "1; mode=block"

    # IE won't let us set cookies without this.
    Header set P3P 'CP="NOI"'

    # Required for IE subtitle/caption support
    <Directory /var/www/>
        AddType text/vtt .vtt
    </Directory>

    {% if use_hsts and not allow_80 %}
    # HSTS (mod_headers is required)
    Header always set Strict-Transport-Security "max-age={{ hsts_max_age }}{% if hsts_include_subdomains %}; includeSubDomains{% endif %}"
    {% endif %}

    RewriteEngine on

    # Rewrite all URLS to point at the primary
    {% if ServerAliases is defined %}
    {% for alias in ServerAliases %}
    RewriteCond "%{HTTP_HOST}"   "{{ alias }}" [NC]
    RewriteRule "^/?$"        "https://{{ ServerName }}/$1" [L,R,NE]
    {% endfor %}
    {% endif %}

    #Block access to .git directories
    RewriteRule ^(.*\/)?\.git - [R=404,L]

    RewriteRule \.ini$ - [R=404,L]

    ##Set max header size to 16Kb
    ##raise limit to 16Kb to support large cookies created by lectora courses
    LimitRequestFieldSize 16384

    SetEnvIf Request_URI "^/ScormEngineInterface/dispatch/.*\.(js|html)$" OVERRIDE_DISPATCH_CACHE_HEADERS=TRUE
    Header add 'Cache-Control' 'no-cache, must-revalidate' env=OVERRIDE_DISPATCH_CACHE_HEADERS

    SetEnvIf Request_URI "^(/(#/.*)?)?$" ROOT_REQUEST=TRUE
    {% if application_x_frame_options|length > 0 %}
    Header add 'X-Frame-Options' "{{ application_x_frame_options }}" env=ROOT_REQUEST
    {% endif %}

    {% if application_content_security_policy|length > 0 %}
    Header add 'Content-Security-Policy' "{{ application_content_security_policy }}" env=ROOT_REQUEST
    {% endif %}

    JkMount /ScormEngineInterface/* ajp13_worker

    ProxyPass /api/ http://localhost:8989/api/
    ProxyPassReverse /api http://localhost:8989/api/

{% if content_proxy_enabled %}
{% if enable_contentvault %}
    ProxyPass /vault/ http://localhost:8090/vault/
    ProxyPassReverse /vault http://localhost:8090/vault/
{% else %}
    ProxyPass /courses/ http://localhost:8090/courses/
    ProxyPassReverse /courses http://localhost:8090/courses/
{% endif %}
{% endif %}

    <Location "/api/">
        Order allow,deny
        Allow from all
{% if cors_allow_origins_for_all is defined and cors_allow_origins_for_all %}
        Header set 'Access-Control-Allow-Origin' '*'
        Header add 'Access-Control-Allow-Credentials' 'true'
        Header add 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE'
        Header add 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,EngineDispatchId,EngineDispatchLaunchSecret'
{% endif %}
        # If an endpoint has specified its own caching behavior, we should respect it (and if the OS supports a version of Apache that allows setIfEmpty)
{% if ansible_os_family == 'Debian' %}
        Header setIfEmpty 'Cache-Control' 'no-cache, no-store, must-revalidate'
        Header setIfEmpty 'Expires' 0
{% else %}
        Header add 'Cache-Control' 'no-cache, no-store, must-revalidate'
        Header add 'Expires' 0
{% endif %}
        #RequestHeader set  X-Apache-Proxy true
        #RequestHeader set  Host             "%{HTTP_HOST}"
        #RequestHeader set  X-Real-IP        "%{REMOTE_ADDR}"
        RequestHeader set  X-Forwarded-Proto "https" env=HTTPS

        # We don't want to add the Pragma header on this endpoint because we want it to be cached by CloudFront
        SetEnvIf Request_URI /api/launch/contentvault/verify/ verify
        Header always add 'Pragma' 'no-cache' env=!verify

        SetEnvIf Request_URI /api/launch/ ExternalAccess
        SetEnvIf Request_URI /api/rxd/results ExternalAccess
        SetEnvIf Request_URI /api/sdxd/results ExternalAccess

        Header set "Access-Control-Allow-Origin" "*" env=ExternalAccess
        Header add 'Access-Control-Allow-Credentials' 'true' env=ExternalAccess
        Header add 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' env=ExternalAccess
        Header add 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,EngineDispatchId,EngineDispatchLaunchSecret' env=ExternalAccess
    </Location>

    ProxyPass /healthcheck http://localhost:8981/healthcheck
    ProxyPassReverse /healthcheck http://localhost:8981/healthcheck

    <Location "/healthcheck">
        Order allow,deny
        Allow from all
        Header add 'Cache-Control' 'no-cache, no-store, must-revalidate'
        Header add 'Pragma' 'no-cache'
        Header add 'Expires' 0
        RequestHeader set  X-Forwarded-Proto "https" env=HTTPS
    </Location>

    ProxyPass /ping http://localhost:8981/ping
    ProxyPassReverse /ping http://localhost:8981/ping

    <Location "/ping">
        Order allow,deny
        Allow from all
        Header add 'Cache-Control' 'no-cache, no-store, must-revalidate'
        Header add 'Pragma' 'no-cache'
        Header add 'Expires' 0
        RequestHeader set  X-Forwarded-Proto "https" env=HTTPS
    </Location>

    <Location "/ScormEngineInterface/">
        # Manually set header because the Tomcat CORS filter won't let us use it with Access-Control-Allow-Origin: *
        Header set Access-Control-Allow-Credentials: "true"
    </Location>

    {% if env == 'dev' %}
    ProxyPass /minio http://localhost:9000/minio
    ProxyPassReverse /minio http://localhost:9000/minio

    <Location "/minio">
        Order allow,deny
        Allow from all
        Header add 'Access-Control-Allow-Origin' '*'
        Header add 'Access-Control-Allow-Credentials' 'true'
        Header add 'Access-Control-Allow-Methods' 'GET'
        Header add 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,EngineDispatchId,EngineDispatchLaunchSecret'
        RequestHeader set  X-Forwarded-Proto "https" env=HTTPS
    </Location>
    {% endif %}

    DocumentRoot {{ html_path }}

    <Directory {{ html_path }}>
        Options FollowSymLinks MultiViews
        AllowOverride None
        Order allow,deny
        allow from all

        <FilesMatch "\.(htm|html)$">
            ExpiresActive On
            ExpiresDefault A1
            Header append Cache-Control must-revalidate
{% if set_ie_compatability_mode_header %}
            Header append X-UA-Compatible IE=edge
{% endif %}
        </FilesMatch>

    </Directory>

    ErrorLog {{ apache_logs }}/error.log

    # Possible values include: debug, info, notice, warn, error, crit,
    # alert, emerg.
    LogLevel warn

    SetEnvIf REMOTE_ADDR "(.+)" CLIENTIP=$1
    SetEnvIf X-Forwarded-For "^([0-9.]+)" CLIENTIP=$1
    LogFormat "%{CLIENTIP}e %l %u %t %D \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" trueip_combined

    CustomLog {{ apache_logs }}/ssl_access.log trueip_combined

</VirtualHost>
