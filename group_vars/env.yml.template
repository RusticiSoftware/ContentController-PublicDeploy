---

########################
# Vars you need to set #
########################

# The env variable determines the environment, as in prod, staging, qa, dev, etc.
# Note that this var will have an effect on the playbooks' behavior.  In particular,
# choosing "dev" will set up a bunch of stuff that you prolly don't want running
# on production machines.  Choosing prod will prevent (among other things) the
# creation of a .my.cnf file in /root

# This var has limited effect, and is mostly present so that these playbooks can be extended
# for multi-deployment environments.
# If you're just testing stuff, use "dev"
# If this is a production deployment, use "prod"
env: dev

# This should be the fully qualified domain name of your content controller server,
# the name that you'll be hitting in a browser to access it.
# If you use the self-signed SSL certificates, this is the name that they'll use.
ServerName: cc.example.com

# Whomever is root - this is mostly for the apache config.  Not really important, but there if you want it :-)
ServerAdmin: root@localhost

# Uncomment this line if you're using RedHat or CentOS 8. Otherwise, delete this line or leave it commented out.

# If you set initalize_mysql to true, we will run the mysql_config role, which sets up users and passwords, and removes
# default databases and such.  Must be used on initial setup of the server(s), but is elective thereafter.
# During install, we pass this a value of "true" on the command line to initialize the databases and users.
# This command is safe to run on an existing system, and must be run if you change any of the mysql credentials in ansible
initialize_mysql: true
mysql_version: '8.0'

# If you're going to use S3, this must be set to "True"
S3FileStorageEnabled: False

# Tomcat-Admin users
# We remove Tomcat-Admin by default, but we install these creds as a precaution in case someone
# decided to enable it.
tomcat_user: 'tomcat-admin'
tomcat_password: t92RjxOU0khdtCVM

# MySQL root password.  This setting is only used for the database setup routines.
# DB creds for Content Controller live in content_controller.yml and engine_java.yml
# If you have already provisioned a root user for your MySQL database server, you'll
# want to enter this value here.

# If you're using "localhost" as your MySQL server, and you run the mysql-config role
# the mysql root password will be set to this value.
# If you're NOT using localhost as your MySQL server, we will NOT attempt to set the root password in the
# mysql-config role. We're polite like that :-)

# This value won't change an existing root credential - it only sets it on a brand-new installation.

# We'll put this in a .my.cnf file in /root for your convenience.
mysql_root_user: root
mysql_root_password: BcLHIRBd9jTtlvb1

# The root directory where you want content to be stored.
# For example, if you use /mnt, your content will be stored in /mnt/content
# No trailing slash please.
data_root: /mnt

# SSL Configuration

# If you'll be terminating SSL elsewhere (like on a load balancer) set use_ssl to false
# and allow_80 to true.
# We don't support running Content Controller without using SSL *somewhere*.
# You can hack it up and make it go, but please don't unless you absolutely must.
use_ssl: true
allow_80: false

# For Apache:
# These should be set to the files that you want to use
# That live in the roles/ssl/files folder.

# Set use_self_signed to have ansible generate a self-signed certificate for you
# which is fine for testing stuff.
# If it is set to any value other than true, we'll use SSL certificates specified below
# SELF SIGNED CERT AUTO-GENERATION DOESN'T WORK ON REDHAT BASED DEPLOYMENTS
# These are for development purposes, and all the dev stuff happens on Ubuntu boxen, so we don't support this
# feature on RedHat/CentOS
use_self_signed: true

# To use your own SSL certificates, set the filenames you wish to use here.
# You'll need to put the certificates themselves in
# roles/ssl/files, and their filenames must match the values below.

# The SSL Public certificate
ssl_certificate: contentcontroller.example.com.crt

# Your private key.  Guard it carefully :-)
ssl_key: contentcontroller.example.com.key

# The SSL certificate authority's chain file
# If you don't need a chain file, then just leave the variable in place, but with no value
ssl_chain: SomeAuthoritysChainFile.crt

# Add `X-UA-Compatible: IE=edge` Internet Explorer compatibility header.  You should leave this disabled
# unless you know that you need it.  It's useful when running CC inside of a corporate intranet where group
# policies set a lower IE compatibility mode by default.
set_ie_compatability_mode_header: false

############################
# End Vars you need to set #
############################

############################
# Optional Vars 	       #
############################

# Java Heap Sizes
# On production environments, tt is VERY important to set these variable to match your target system!
# To choose your heap sizes, take the amount of RAM in your system, subtract the OS overhead, and subtract another 50% of the OS overhead.
# Split the remaining RAM between the engine_heap_size and cc_heap size.
# So, if you have 8GB RAM in your box, and your OS needs 1GB to run+50%, that leaves you 6.5GB to allocate.

# A good rule of thumb for allocation is that you should give 2/3 of the available memory to Engine,
# and 1/3 to Content Controller.
# You'll want to allocate a MINIMUM of 500m to cc_heap size and 1g to the engine_heap_size.
engine_heap_size: 1g
cc_heap_size: 500m

# End Apache config vars
#######################


# You'll want to leave this one alone.  We include it so that devs can skip checking
# various time-consuming dependencies when they just want to run a quick update.
# Nothing to see here, move along.
skip_deps: false

use_local_apt_cache: false
local_apt_cache_host: mirror.office.rusticisoftware.com

# Set noupgrade to true to prevent apt from patching the box with each run.
# Generally, you want it to patch itself unless you have some sort of network policy that prevents access to public apt caches.
noupgrade: false
